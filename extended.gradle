def version = 'v1.16.3'

if (settings.ext.find("GRADLE_EXTENDED_VERSION_USED")) {
    version = GRADLE_EXTENDED_VERSION_USED
}

def urlRoot = "https://raw.githubusercontent.com/the-inkwell/gradle-tools/${version}/configurations/"

def files = [
  "dependencyUpdates",
  "detekt",
  "dokka",
  "jacoco",
  "ktlint",
  "license",
  "modules",
  "moduleSetup",
  "publishing",
  "sonarqube"
].collectEntries{[it, "${it}.gradle"]}

def holder = [
    catalog: 'libs.versions.toml',
    detektConfig: 'detekt-config.yml',
    ktlintConfig: 'ktlint-editorconfig',
    jacocoProject: 'jacoco.project.gradle',
    dokkaProject: 'dokka.project.gradle'
]

holder.each {
  files[it.key] = it.value
}

def output = "${rootDir}/gradle/extended/${version}"
def outputDir = new File(output)

def random = new Random()
def currentDir = null == buildscript.sourceFile ? null : file(buildscript.sourceFile).getParentFile().getAbsolutePath()

if (null != currentDir) {
  println("using files located at ${currentDir}/configurations/")
} else {
  if (!outputDir.exists()) outputDir.mkdirs()
}

files.each {
  def result = "${output}/${it.value}"

  if (null != currentDir) {
    result = "${currentDir}/configurations/${it.value}"
  } else {
    def url = "$urlRoot/${it.value}?timestamp=${random.nextInt()}"
    def file = new File(result)

    if (!file.exists()) {
        new URL(url).withInputStream{ i -> file.withOutputStream{ it << i }}
    }
  }

  it.value = result
}

gradle.ext.extended = [
  files: files
]

// now manage kt-plugins
// create the kt-plugins/src/main/kotlin
if (null == currentDir) {
  println("managing the integration of the kt-plugins")
  def ktpluginKotlinDir = file("$output/kt-plugins/src/main/kotlin")
  if (!ktpluginKotlinDir.exists()) {
    ktpluginKotlinDir.mkdirs()
  }

  [
   "kt-plugins/build.gradle.kts",
   "kt-plugins/settings.gradle",
   "kt-plugins/src/main/kotlin/getExtraString.kt",
   "kt-plugins/src/main/kotlin/iosSimulatorConfiguration.gradle.kts",
   "kt-plugins/src/main/kotlin/jvmCompat.gradle.kts",
   "kt-plugins/src/main/kotlin/publication.gradle.kts",
  ].each {outputFile ->
    def url = "$urlRoot/$outputFile?timestamp=${random.nextInt()}"
    def file = new File(output, outputFile)

    if (!file.exists()) {
      new URL(url).withInputStream{ i -> file.withOutputStream{ it << i }}
    }
  }
} else {
  println("skip downloading kt-plugins as it's a local build")
}
